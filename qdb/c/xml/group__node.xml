<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__node" kind="group">
    <compoundname>node</compoundname>
    <title>Node- and cluster-related operations</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__node_1ga9e206a7e7c1423fea3164104c27c11c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__attr_1ga008cbf050a89152ec67d33e534cd3012" kindref="member">QDB_API_LINKAGE</ref> <ref refid="group__error_1ga365e768c3ca0f6387d8798eb98c40443" kindref="member">qdb_error_t</ref></type>
        <definition>QDB_API_LINKAGE qdb_error_t qdb_node_status</definition>
        <argsstring>(qdb_handle_t handle, const char *uri, const char **content, qdb_size_t *content_length)</argsstring>
        <name>qdb_node_status</name>
        <param>
          <type><ref refid="group__client_1ga720fb72da4197685cc354214e96796c1" kindref="member">qdb_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>uri</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>content</declname>
        </param>
        <param>
          <type><ref refid="group__client_1ga2b6f368592c49501d41ec2330b964147" kindref="member">qdb_size_t</ref> *</type>
          <declname>content_length</declname>
        </param>
        <briefdescription>
<para>Returns the status of a node. </para>        </briefdescription>
        <detaileddescription>
<para>The API will request the node for its status and allocate a buffer of the appropriate size, which will later have to be released using <ref refid="group__client_1ga31b15fb83e60b9cb16504618616f29f3" kindref="member">qdb_release</ref>.</para><para>The status is JSON object and contains current information of the node state, as described in the documentation.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid handle previously initialized by <ref refid="group__client_1gaa86900c81459a8d60b9b7b042371fa1e" kindref="member">qdb_open</ref> or <ref refid="group__client_1gab7a783a4a0cc73211ad96b9685f2c67e" kindref="member">qdb_open_tcp</ref>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uri</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a null-terminated UTF-8 string representing the URI of node for which the status is requested.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">content</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the pointer of an API-allocated buffer holding the node status.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">content_length</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an integer representing the size of the API-allocated buffer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="group__error_1gab1b09622035af18ab20ed4fd3b61dd46" kindref="member">qdb_error_t</ref> code indicating success or failure.</para></simplesect>
<simplesect kind="see"><para><ref refid="group__client_1ga31b15fb83e60b9cb16504618616f29f3" kindref="member">qdb_release</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qdb/node.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__node_1ga5276d38715650cb3102ce3f1f22a4945" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__attr_1ga008cbf050a89152ec67d33e534cd3012" kindref="member">QDB_API_LINKAGE</ref> <ref refid="group__error_1ga365e768c3ca0f6387d8798eb98c40443" kindref="member">qdb_error_t</ref></type>
        <definition>QDB_API_LINKAGE qdb_error_t qdb_node_config</definition>
        <argsstring>(qdb_handle_t handle, const char *uri, const char **content, qdb_size_t *content_length)</argsstring>
        <name>qdb_node_config</name>
        <param>
          <type><ref refid="group__client_1ga720fb72da4197685cc354214e96796c1" kindref="member">qdb_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>uri</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>content</declname>
        </param>
        <param>
          <type><ref refid="group__client_1ga2b6f368592c49501d41ec2330b964147" kindref="member">qdb_size_t</ref> *</type>
          <declname>content_length</declname>
        </param>
        <briefdescription>
<para>Returns the configuration of a node. </para>        </briefdescription>
        <detaileddescription>
<para>The API will request the node for its configuration and allocate a buffer of the appropriate size, which will later have to be released using <ref refid="group__client_1ga31b15fb83e60b9cb16504618616f29f3" kindref="member">qdb_release</ref>.</para><para>The configuration is JSON object, as described in the documentation.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid handle previously initialized by <ref refid="group__client_1gaa86900c81459a8d60b9b7b042371fa1e" kindref="member">qdb_open</ref> or <ref refid="group__client_1gab7a783a4a0cc73211ad96b9685f2c67e" kindref="member">qdb_open_tcp</ref>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uri</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a null-terminated UTF-8 string representing the URI of the node for which the configuration is requested.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">content</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the pointer of an API-allocated buffer holding the node configuration.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">content_length</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an integer representing the size of the API-allocated buffer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="group__error_1gab1b09622035af18ab20ed4fd3b61dd46" kindref="member">qdb_error_t</ref> code indicating success or failure.</para></simplesect>
<simplesect kind="see"><para><ref refid="group__client_1ga31b15fb83e60b9cb16504618616f29f3" kindref="member">qdb_release</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qdb/node.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__node_1ga0f18055deb3c22c89e6391595b85a4aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__attr_1ga008cbf050a89152ec67d33e534cd3012" kindref="member">QDB_API_LINKAGE</ref> <ref refid="group__error_1ga365e768c3ca0f6387d8798eb98c40443" kindref="member">qdb_error_t</ref></type>
        <definition>QDB_API_LINKAGE qdb_error_t qdb_node_topology</definition>
        <argsstring>(qdb_handle_t handle, const char *uri, const char **content, qdb_size_t *content_length)</argsstring>
        <name>qdb_node_topology</name>
        <param>
          <type><ref refid="group__client_1ga720fb72da4197685cc354214e96796c1" kindref="member">qdb_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>uri</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>content</declname>
        </param>
        <param>
          <type><ref refid="group__client_1ga2b6f368592c49501d41ec2330b964147" kindref="member">qdb_size_t</ref> *</type>
          <declname>content_length</declname>
        </param>
        <briefdescription>
<para>Returns the topology of a node. </para>        </briefdescription>
        <detaileddescription>
<para>The API will request the node for its topology and allocate a buffer of the appropriate size, which will later have to be released using <ref refid="group__client_1ga31b15fb83e60b9cb16504618616f29f3" kindref="member">qdb_release</ref>.</para><para>The topology is JSON object containing the node address, and the addresses of its successor and predecessor.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid handle previously initialized by <ref refid="group__client_1gaa86900c81459a8d60b9b7b042371fa1e" kindref="member">qdb_open</ref> or <ref refid="group__client_1gab7a783a4a0cc73211ad96b9685f2c67e" kindref="member">qdb_open_tcp</ref>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uri</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a null-terminated UTF-8 string representing the URI of node for which the topology is requested.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">content</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the pointer of an API-allocated buffer holding the node topology.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">content_length</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an integer representing the size of the API-allocated buffer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="group__error_1gab1b09622035af18ab20ed4fd3b61dd46" kindref="member">qdb_error_t</ref> code indicating success or failure.</para></simplesect>
<simplesect kind="see"><para><ref refid="group__client_1ga31b15fb83e60b9cb16504618616f29f3" kindref="member">qdb_release</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qdb/node.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__node_1gab7c73a18d1c3efff80b73a542d192d83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__attr_1ga008cbf050a89152ec67d33e534cd3012" kindref="member">QDB_API_LINKAGE</ref> <ref refid="group__error_1ga365e768c3ca0f6387d8798eb98c40443" kindref="member">qdb_error_t</ref></type>
        <definition>QDB_API_LINKAGE qdb_error_t qdb_node_stop</definition>
        <argsstring>(qdb_handle_t handle, const char *uri, const char *reason)</argsstring>
        <name>qdb_node_stop</name>
        <param>
          <type><ref refid="group__client_1ga720fb72da4197685cc354214e96796c1" kindref="member">qdb_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>uri</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>reason</declname>
        </param>
        <briefdescription>
<para>Requests the node to gracefully stop. </para>        </briefdescription>
        <detaileddescription>
<para>Use this function to remotely stop a node, the supplied reason will be displayed in the logs of the remote node.</para><para>By default cluster do not allow this operation and the function will return <ref refid="group__error_1gga365e768c3ca0f6387d8798eb98c40443a5e3f7ff277511984a70139328714d839" kindref="member">qdb_e_operation_disabled</ref> error.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid handle previously initialized by <ref refid="group__client_1gaa86900c81459a8d60b9b7b042371fa1e" kindref="member">qdb_open</ref> or <ref refid="group__client_1gab7a783a4a0cc73211ad96b9685f2c67e" kindref="member">qdb_open_tcp</ref>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uri</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a null-terminated UTF-8 string representing the URI of node to be stopped.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reason</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a null-terminated UTF-8 string of the reason for the stop.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="group__error_1gab1b09622035af18ab20ed4fd3b61dd46" kindref="member">qdb_error_t</ref> code indicating success or failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qdb/node.h" line="154" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
