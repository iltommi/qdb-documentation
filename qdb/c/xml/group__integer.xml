<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="group__integer" kind="group">
    <compoundname>integer</compoundname>
    <title>Integer operations</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__integer_1ga3ea1221d8023a5936c74c191da96ed10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__error_1ga352232196dc2f9b9a89d701f63916cec" kindref="member">qdb_error_t</ref></type>
        <definition>qdb_error_t qdb_int_put</definition>
        <argsstring>(qdb_handle_t handle, const char *alias, qdb_int_t integer, qdb_time_t expiry_time)</argsstring>
        <name>qdb_int_put</name>
        <param>
          <type><ref refid="group__client_1ga720fb72da4197685cc354214e96796c1" kindref="member">qdb_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>alias</declname>
        </param>
        <param>
          <type><ref refid="group__client_1ga17492cb84da5466d0c742f0561df6597" kindref="member">qdb_int_t</ref></type>
          <declname>integer</declname>
        </param>
        <param>
          <type><ref refid="group__client_1ga4745ed10b405291a321ec7150368a4b1" kindref="member">qdb_time_t</ref></type>
          <declname>expiry_time</declname>
        </param>
        <briefdescription>
<para>Creates a new signed 64-bit integer. </para>        </briefdescription>
        <detaileddescription>
<para>Atomically creates an entry of the given alias and sets it to a cross-platform signed 64-bit integer. If the entry already exists, the function returns an error.</para><para>You can specify an expiry or use qdb_never_expires if you don&apos;t want the entry to expire.</para><para>If you want to create or update an entry use <ref refid="group__integer_1ga8adfbb676817447300db1f34f971ca7c" kindref="member">qdb_int_update</ref>.</para><para>The value will be correctly translated independently of the endianness of the client&apos;s platform.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid handle previously initialized by <ref refid="group__client_1ga13578ad42536a5176f3fd2c3a9d53a51" kindref="member">qdb_open</ref> or <ref refid="group__client_1gaf7587c548b4113bfe9f085e6d70cf455" kindref="member">qdb_open_tcp</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alias</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a null terminated UTF-8 string representing the alias of the entry. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>integer</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to which the integer must be set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>expiry_time</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional absolute expiry time expressed in UTC UNIX epoch. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A qdb_error_t code indicating success or failure. </para></simplesect>
<simplesect kind="see"><para><ref refid="group__integer_1ga8adfbb676817447300db1f34f971ca7c" kindref="member">qdb_int_update</ref>, <ref refid="group__integer_1ga12a283f0b974a91433cb09054b94a10a" kindref="member">qdb_int_get</ref>, <ref refid="group__integer_1ga7335937383f6ab76b319924d83a968c7" kindref="member">qdb_int_add</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/workspace/quasardb/api/include/qdb/integer.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__integer_1ga8adfbb676817447300db1f34f971ca7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__error_1ga352232196dc2f9b9a89d701f63916cec" kindref="member">qdb_error_t</ref></type>
        <definition>qdb_error_t qdb_int_update</definition>
        <argsstring>(qdb_handle_t handle, const char *alias, qdb_int_t integer, qdb_time_t expiry_time)</argsstring>
        <name>qdb_int_update</name>
        <param>
          <type><ref refid="group__client_1ga720fb72da4197685cc354214e96796c1" kindref="member">qdb_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>alias</declname>
        </param>
        <param>
          <type><ref refid="group__client_1ga17492cb84da5466d0c742f0561df6597" kindref="member">qdb_int_t</ref></type>
          <declname>integer</declname>
        </param>
        <param>
          <type><ref refid="group__client_1ga4745ed10b405291a321ec7150368a4b1" kindref="member">qdb_time_t</ref></type>
          <declname>expiry_time</declname>
        </param>
        <briefdescription>
<para>Creates or updates a signed 64-bit integer. </para>        </briefdescription>
        <detaileddescription>
<para>Atomically updates an entry of the given alias to the provided value. If the entry doesn&apos;t exist, it will be created. If the entry is not an integer, the function will return qdb_e_incompatible_type.</para><para>You can specify an expiry time or use qdb_never_expires if you don&apos;t want the entry to expire.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid handle previously initialized by <ref refid="group__client_1ga13578ad42536a5176f3fd2c3a9d53a51" kindref="member">qdb_open</ref> or <ref refid="group__client_1gaf7587c548b4113bfe9f085e6d70cf455" kindref="member">qdb_open_tcp</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alias</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a null terminated UTF-8 string representing the alias of the entry. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>integer</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to which the integer must be set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>expiry_time</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional absolute expiry time expressed in UTC UNIX epoch. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A qdb_error_t code indicating success or failure. </para></simplesect>
<simplesect kind="see"><para><ref refid="group__integer_1ga3ea1221d8023a5936c74c191da96ed10" kindref="member">qdb_int_put</ref>, <ref refid="group__integer_1ga12a283f0b974a91433cb09054b94a10a" kindref="member">qdb_int_get</ref>, <ref refid="group__integer_1ga7335937383f6ab76b319924d83a968c7" kindref="member">qdb_int_add</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/workspace/quasardb/api/include/qdb/integer.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__integer_1ga12a283f0b974a91433cb09054b94a10a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__error_1ga352232196dc2f9b9a89d701f63916cec" kindref="member">qdb_error_t</ref></type>
        <definition>qdb_error_t qdb_int_get</definition>
        <argsstring>(qdb_handle_t handle, const char *alias, qdb_int_t *integer)</argsstring>
        <name>qdb_int_get</name>
        <param>
          <type><ref refid="group__client_1ga720fb72da4197685cc354214e96796c1" kindref="member">qdb_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>alias</declname>
        </param>
        <param>
          <type><ref refid="group__client_1ga17492cb84da5466d0c742f0561df6597" kindref="member">qdb_int_t</ref> *</type>
          <declname>integer</declname>
        </param>
        <briefdescription>
<para>Retrieves the value of a signed 64-bit integer. </para>        </briefdescription>
        <detaileddescription>
<para>Atomically retrieves the value of an existing 64-bit integer.</para><para>If the entry is not an integer, the function will return qdb_e_incompatible_type.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid handle previously initialized by <ref refid="group__client_1ga13578ad42536a5176f3fd2c3a9d53a51" kindref="member">qdb_open</ref> or <ref refid="group__client_1gaf7587c548b4113bfe9f085e6d70cf455" kindref="member">qdb_open_tcp</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alias</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a null terminated UTF-8 string representing the alias of the entry. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>integer</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an integer that will receive the current value of the entry, if successful. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A qdb_error_t code indicating success or failure. </para></simplesect>
<simplesect kind="see"><para><ref refid="group__integer_1ga3ea1221d8023a5936c74c191da96ed10" kindref="member">qdb_int_put</ref>, <ref refid="group__integer_1ga8adfbb676817447300db1f34f971ca7c" kindref="member">qdb_int_update</ref>, <ref refid="group__integer_1ga7335937383f6ab76b319924d83a968c7" kindref="member">qdb_int_add</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/workspace/quasardb/api/include/qdb/integer.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__integer_1ga7335937383f6ab76b319924d83a968c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__error_1ga352232196dc2f9b9a89d701f63916cec" kindref="member">qdb_error_t</ref></type>
        <definition>qdb_error_t qdb_int_add</definition>
        <argsstring>(qdb_handle_t handle, const char *alias, qdb_int_t addend, qdb_int_t *result)</argsstring>
        <name>qdb_int_add</name>
        <param>
          <type><ref refid="group__client_1ga720fb72da4197685cc354214e96796c1" kindref="member">qdb_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>alias</declname>
        </param>
        <param>
          <type><ref refid="group__client_1ga17492cb84da5466d0c742f0561df6597" kindref="member">qdb_int_t</ref></type>
          <declname>addend</declname>
        </param>
        <param>
          <type><ref refid="group__client_1ga17492cb84da5466d0c742f0561df6597" kindref="member">qdb_int_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Atomically increases or decreases a signed 64-bit integer. </para>        </briefdescription>
        <detaileddescription>
<para>The specified entry will be atomically increased (or decreased) according to the given addend value:<itemizedlist>
<listitem><para>To increase the value, specify a positive addend</para></listitem><listitem><para>To decrease the value, specify a negative addend</para></listitem></itemizedlist>
</para><para>The function return the result of the operation.</para><para>The entry must already exist. If the entry is not an integer, the function will return qdb_e_incompatible_type.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid handle previously initialized by <ref refid="group__client_1ga13578ad42536a5176f3fd2c3a9d53a51" kindref="member">qdb_open</ref> or <ref refid="group__client_1gaf7587c548b4113bfe9f085e6d70cf455" kindref="member">qdb_open_tcp</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alias</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a null terminated UTF-8 string representing the alias of the entry. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addend</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to add to the existing value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an integer that will receive the current value of the entry, if successful. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A qdb_error_t code indicating success or failure. </para></simplesect>
<simplesect kind="see"><para><ref refid="group__integer_1ga3ea1221d8023a5936c74c191da96ed10" kindref="member">qdb_int_put</ref>, <ref refid="group__integer_1ga8adfbb676817447300db1f34f971ca7c" kindref="member">qdb_int_update</ref>, <ref refid="group__integer_1ga12a283f0b974a91433cb09054b94a10a" kindref="member">qdb_int_get</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/workspace/quasardb/api/include/qdb/integer.h" line="142" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
